@{
    ViewData["Title"] = "Carisma - Rent a Car";
}

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        overflow-x: hidden;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
    }

    .hero-section {
        position: relative;
        height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.9) 0%, rgba(118, 75, 162, 0.9) 100%), url('/images/rentacar-2.png');
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
        color: white;
        text-align: center;
        overflow: hidden;
    }

        .hero-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: radial-gradient(circle at 30% 70%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
            animation: float 6s ease-in-out infinite;
        }

    @@keyframes float {
        0%, 100% {
            transform: translateY(0px) rotate(0deg);
        }

        50% {
            transform: translateY(-20px) rotate(1deg);
        }
    }

    .hero-content {
        max-width: 1200px;
        padding: 2rem;
        z-index: 2;
        position: relative;
    }

    .logo {
        font-size: 4rem;
        font-weight: 800;
        margin-bottom: 1rem;
        background: linear-gradient(45deg, #fff, #ff6b6b, #4ecdc4, #45b7d1);
        background-size: 300% 300%;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: gradientShift 4s ease infinite;
        text-shadow: 0 0 30px rgba(255, 255, 255, 0.5);
    }

    @@keyframes gradientShift {
        0%, 100% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }
    }

    .tagline {
        font-size: 1.5rem;
        margin-bottom: 2rem;
        opacity: 0.9;
        animation: slideUp 1s ease-out 0.5s both;
    }

    @@keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 0.9;
            transform: translateY(0);
        }
    }

    .info-card {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 20px;
        padding: 2.5rem;
        margin: 2rem auto;
        max-width: 800px;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
        animation: slideUp 1s ease-out 1s both;
        transition: all 0.3s ease;
    }

        .info-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 35px 70px rgba(0, 0, 0, 0.3);
            background: rgba(255, 255, 255, 0.15);
        }

        .info-card h2 {
            font-size: 2rem;
            margin-bottom: 1.5rem;
            color: #fff;
        }

        .info-card p {
            font-size: 1.1rem;
            line-height: 1.8;
            color: rgba(255, 255, 255, 0.9);
            margin-bottom: 1rem;
        }

    .features-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 2rem;
        margin: 3rem 0 1rem 0;
        animation: slideUp 1s ease-out 1.5s both;
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
    }

    .center-card {
        display: flex;
        justify-content: center;
        margin: 2rem 0;
        animation: slideUp 1s ease-out 1.7s both;
    }

        .center-card .feature-card {
            max-width: 280px;
        }

    .feature-card {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 15px;
        padding: 2rem;
        text-align: center;
        transition: all 0.3s ease;
        cursor: pointer;
        text-decoration: none;
        color: inherit;
        display: block;
    }

        .feature-card:hover {
            transform: translateY(-5px) scale(1.02);
            background: rgba(255, 255, 255, 0.2);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        }

    .feature-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
        display: block;
    }

    .feature-card h3 {
        font-size: 1.3rem;
        margin-bottom: 1rem;
        color: #fff;
    }

    .feature-card p {
        font-size: 0.95rem;
        color: rgba(255, 255, 255, 0.8);
        line-height: 1.6;
    }

    .cta-button {
        display: inline-block;
        background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
        color: white;
        padding: 1rem 2.5rem;
        border: none;
        border-radius: 50px;
        font-size: 1.2rem;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        box-shadow: 0 10px 30px rgba(255, 107, 107, 0.3);
        animation: slideUp 1s ease-out 2s both;
        cursor: pointer;
    }

        .cta-button:hover {
            transform: translateY(-3px) scale(1.05);
            box-shadow: 0 15px 40px rgba(255, 107, 107, 0.4);
            background: linear-gradient(45deg, #ff5252, #26c6da);
        }

    .floating-elements {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        overflow: hidden;
    }

    .floating-car {
        position: absolute;
        font-size: 2rem;
        opacity: 0.1;
        animation: floatCar 15s linear infinite;
    }

        .floating-car:nth-child(1) {
            top: 20%;
            left: -5%;
            animation-delay: 0s;
        }

        .floating-car:nth-child(2) {
            top: 60%;
            left: -5%;
            animation-delay: 7s;
        }

        .floating-car:nth-child(3) {
            top: 40%;
            left: -5%;
            animation-delay: 14s;
        }

    @@keyframes floatCar {
        0% {
            transform: translateX(-100px) rotate(0deg);
        }

        100% {
            transform: translateX(calc(100vw + 100px)) rotate(360deg);
        }
    }

    @@media (max-width: 768px) {
        .logo {
            font-size: 2.5rem;
        }

        .tagline {
            font-size: 1.2rem;
        }

        .info-card {
            padding: 1.5rem;
            margin: 1rem;
        }

        .features-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
            max-width: 100%;
        }

        .center-card .feature-card {
            max-width: 100%;
        }

        .hero-content {
            padding: 1rem;
        }
    }

    .pulse {
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(255, 107, 107, 0.7);
        }

        70% {
            box-shadow: 0 0 0 10px rgba(255, 107, 107, 0);
        }

        100% {
            box-shadow: 0 0 0 0 rgba(255, 107, 107, 0);
        }
    }

    @@keyframes ripple {
        to {
            transform: scale(4);
            opacity: 0;
        }
    }
</style>

<div class="hero-section">
    <div class="floating-elements">
        <div class="floating-car">🚗</div>
        <div class="floating-car">🚙</div>
        <div class="floating-car">🚕</div>
    </div>

    <div class="hero-content">
        <h1 class="logo">Carisma</h1>
        <p class="tagline">Vaša pouzdana aplikacija za iznajmljivanje vozila</p>

        <div class="info-card">
            <h2>Dobrodošli u budućnost iznajmljivanja vozila</h2>
            <p>
                Carisma je moderna web-aplikacija dizajnirana za brzo i jednostavno iznajmljivanje vozila.
                Naša platforma omogućava korisnicima da u nekoliko klikova rezervišu vozilo,
                izvrše online uplatu i prate stanje svog korisničkog naloga.
            </p>
            <p>
                Započnite svoju vožnju sa Carismom danas i iskusite revoluciju u svijetu rent-a-car usluga!
            </p>
        </div>

        <div class="features-grid">
            <a href="@Url.Action("Index", "Rezervacija")" class="feature-card">
                <span class="feature-icon">⚡</span>
                <h3>Brza Rezervacija</h3>
                <p>Rezervišite vozilo u samo nekoliko klikova kroz našu intuitivnu platformu</p>
            </a>

            <a href="@Url.Action("Index", "Podrska")" class="feature-card">
                <span class="feature-icon">🛠️</span>
                <h3>Podrška</h3>
                <p>Kontaktirajte naš tim za podršku za bilo kakva pitanja ili pomoć</p>
            </a>
        </div>

        <div class="center-card">
            <a href="@Url.Action("Index", "Vozilo")" class="feature-card">
                <span class="feature-icon">🚗</span>
                <h3>Vozila</h3>
                <p>Pregledajte našu flotu dostupnih vozila za iznajmljivanje</p>
            </a>
        </div>

        <a href="#" class="cta-button pulse">Počnite Vašu Vožnju</a>
    </div>
</div>

<script>
    // Add smooth scrolling and interactive effects
    document.addEventListener('DOMContentLoaded', function() {
        // Add hover effect to feature cards
        const featureCards = document.querySelectorAll('.feature-card');
        featureCards.forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-10px) scale(1.05)';
            });

            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0) scale(1)';
            });
        });

        // Add click effect to CTA button
        const ctaButton = document.querySelector('.cta-button');
        ctaButton.addEventListener('click', function(e) {
            e.preventDefault();

            // Create ripple effect
            const ripple = document.createElement('span');
            const rect = this.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;

            ripple.style.width = ripple.style.height = size + 'px';
            ripple.style.left = x + 'px';
            ripple.style.top = y + 'px';
            ripple.style.position = 'absolute';
            ripple.style.borderRadius = '50%';
            ripple.style.background = 'rgba(255, 255, 255, 0.6)';
            ripple.style.transform = 'scale(0)';
            ripple.style.animation = 'ripple 0.6s linear';
            ripple.style.pointerEvents = 'none';

            this.style.position = 'relative';
            this.style.overflow = 'hidden';
            this.appendChild(ripple);

            setTimeout(() => {
                ripple.remove();
            }, 600);
        });

        // Add parallax effect to background
        window.addEventListener('scroll', function() {
            const scrolled = window.pageYOffset;
            const heroSection = document.querySelector('.hero-section');
            if (heroSection) {
                heroSection.style.transform = `translateY(${scrolled * 0.5}px)`;
            }
        });
    });
</script>